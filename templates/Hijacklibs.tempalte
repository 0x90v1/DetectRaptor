name: Windows.Detection.HijackLibsMFT
author: Matt Green - @mgreen27
description: |
   Bulk indicator hunt over Windows.NTFS.MFT for potential hijacked dlls.
   
   The artifact is automatically generated by DetectRaptor with an API extract 
   of Hijacklibs not including environment variable examples.
   
   The artifact searches for DllName, then excludes expected path. Untrusted 
   Authenticode or entries without a subject reference to Vendor are in scope.
   
   Expect false positives, context fields have also been included for scoping.

reference:
  - https://github.com/mgreen27/DetectRaptor
  - https://hijacklibs.net/

type: CLIENT
resources:
  timeout: 9000

parameters:
   - name: AllCsv
     type: hidden
     default: |
%(ioc)s  

sources:
  - precondition:
      SELECT OS From info() where OS = 'windows'

    query: |
      LET IocCsv <= SELECT * FROM parse_csv(filename=AllCsv,accessor='data') 
    
      LET dllname_hits = SELECT EntryNumber,InUse,ParentEntryNumber,
            OSPath, FileName, FileSize,ReferenceCount,SI_Lt_FN,uSecZeros,
            LastModified0x10,LastAccess0x10,LastRecordChange0x10,Created0x10,
            LastModified0x30,LastAccess0x30,LastRecordChange0x30,Created0x30
        FROM Artifact.Windows.NTFS.MFT(FileRegex='^(' + join(array=IocCsv.DllName,sep='|') + ')$')
      
      LET hits= SELECT * FROM foreach(row=dllname_hits,query={
            SELECT 
                OSPath, FileName, FileSize,ReferenceCount,SI_Lt_FN,uSecZeros,
                EntryNumber,InUse,ParentEntryNumber,
                dict(
                    LastModified0x10=LastModified0x10,
                    LastAccess0x10=LastAccess0x10,
                    LastRecordChange0x10=LastRecordChange0x10,
                    Created0x10=Created0x10 ) AS TimestampsSI,
                dict(
                    LastModified0x30=LastModified0x30,
                    LastAccess0x30=LastAccess0x30,
                    LastRecordChange0x30=LastRecordChange0x30,
                    Created0x30=Created0x30 ) AS TimestampsFN,
                dict(DllName=DllName,Vendor=Vendor,ExpectedLocation=ExpectedLocation,ExecutablePath=ExecutablePath,Type=Type,ExecutableSHA256=ExecutableSHA256,Url=Url) as HijackLibInfo
            FROM IocCsv
            WHERE FileName =~ DllName
                AND NOT OSPath =~ ExpectedLocation
                AND if( condition= ExpectedLocation=~ 'Windows..System32',
                        then= NOT OSPath =~ '''C:\\Windows\\WinSxS\\''',
                        else= True)
      }, workers = 20 )

      SELECT HijackLibInfo,
            OSPath, FileName, FileSize,ReferenceCount,SI_Lt_FN,uSecZeros,
            EntryNumber,InUse,ParentEntryNumber,TimestampsSI,TimestampsFN,
            parse_pe(file=OSPath) AS DllInfo,
            authenticode(filename=OSPath) AS DllAuthenticode
            ,{ SELECT OSPath FROM glob(root=dirname(path=OSPath),globs='*')} as Folder
        FROM hits
        WHERE ( NOT DllAuthenticode.Trusted = 'trusted' OR NOT DllAuthenticode.SubjectName =~ HijackLibInfo.Vendor )